{"ast":null,"code":"import axios from 'axios';\nimport { LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, REGISTER_SUCCESS, REGISTER_FAIL } from './types';\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:3000/api';\nexport const loginUser = (email, password) => async dispatch => {\n  try {\n    const res = await axios.post(`${API_URL}/auth/login`, {\n      email,\n      password\n    });\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n    return res.data;\n  } catch (err) {\n    dispatch({\n      type: LOGIN_FAIL,\n      payload: err.response ? err.response.data.message : err.message\n    });\n    throw err;\n  }\n};\nexport const registerClient = userData => async dispatch => {\n  try {\n    const res = await axios.post(`${API_URL}/clients/register`, userData);\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: REGISTER_FAIL,\n      payload: err.response ? err.response.data.message : err.message\n    });\n  }\n};\nexport const registerTransporter = userData => async dispatch => {\n  try {\n    const res = await axios.post(`${API_URL}/transporters/register`, userData);\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: REGISTER_FAIL,\n      payload: err.response ? err.response.data.message : err.message\n    });\n  }\n};\nexport const logout = () => dispatch => {\n  dispatch({\n    type: LOGOUT\n  });\n  window.location.href = '/';\n};","map":{"version":3,"names":["axios","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","REGISTER_SUCCESS","REGISTER_FAIL","API_URL","process","env","REACT_APP_API_URL","loginUser","email","password","dispatch","res","post","type","payload","data","err","response","message","registerClient","userData","registerTransporter","logout","window","location","href"],"sources":["/Users/mohamet/Downloads/ThewebApp-master/src/components/actions/authActions.js"],"sourcesContent":["import axios from 'axios';\nimport { LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, REGISTER_SUCCESS, REGISTER_FAIL } from './types';\n\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:3000/api';\n\nexport const loginUser = (email, password) => async dispatch => {\n  try {\n    const res = await axios.post(`${API_URL}/auth/login`, { email, password });\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n    return res.data;\n  } catch (err) {\n    dispatch({\n      type: LOGIN_FAIL,\n      payload: err.response ? err.response.data.message : err.message\n    });\n    throw err;\n  }\n};\nexport const registerClient = (userData) => async dispatch => {\n  try {\n    const res = await axios.post(`${API_URL}/clients/register`, userData);\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: REGISTER_FAIL,\n      payload: err.response ? err.response.data.message : err.message\n    });\n  }\n};\n\nexport const registerTransporter = (userData) => async dispatch => {\n  try {\n    const res = await axios.post(`${API_URL}/transporters/register`, userData);\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: REGISTER_FAIL,\n      payload: err.response ? err.response.data.message : err.message\n    });\n  }\n};\n\nexport const logout = () => dispatch => {\n  dispatch({ type: LOGOUT });\n  window.location.href = '/';\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,EAAEC,UAAU,EAAEC,MAAM,EAAEC,gBAAgB,EAAEC,aAAa,QAAQ,SAAS;AAE5F,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;AAE5E,OAAO,MAAMC,SAAS,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK,MAAMC,QAAQ,IAAI;EAC9D,IAAI;IACF,MAAMC,GAAG,GAAG,MAAMd,KAAK,CAACe,IAAI,CAAC,GAAGT,OAAO,aAAa,EAAE;MAAEK,KAAK;MAAEC;IAAS,CAAC,CAAC;IAC1EC,QAAQ,CAAC;MACPG,IAAI,EAAEf,aAAa;MACnBgB,OAAO,EAAEH,GAAG,CAACI;IACf,CAAC,CAAC;IACF,OAAOJ,GAAG,CAACI,IAAI;EACjB,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZN,QAAQ,CAAC;MACPG,IAAI,EAAEd,UAAU;MAChBe,OAAO,EAAEE,GAAG,CAACC,QAAQ,GAAGD,GAAG,CAACC,QAAQ,CAACF,IAAI,CAACG,OAAO,GAAGF,GAAG,CAACE;IAC1D,CAAC,CAAC;IACF,MAAMF,GAAG;EACX;AACF,CAAC;AACD,OAAO,MAAMG,cAAc,GAAIC,QAAQ,IAAK,MAAMV,QAAQ,IAAI;EAC5D,IAAI;IACF,MAAMC,GAAG,GAAG,MAAMd,KAAK,CAACe,IAAI,CAAC,GAAGT,OAAO,mBAAmB,EAAEiB,QAAQ,CAAC;IACrEV,QAAQ,CAAC;MACPG,IAAI,EAAEZ,gBAAgB;MACtBa,OAAO,EAAEH,GAAG,CAACI;IACf,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZN,QAAQ,CAAC;MACPG,IAAI,EAAEX,aAAa;MACnBY,OAAO,EAAEE,GAAG,CAACC,QAAQ,GAAGD,GAAG,CAACC,QAAQ,CAACF,IAAI,CAACG,OAAO,GAAGF,GAAG,CAACE;IAC1D,CAAC,CAAC;EACJ;AACF,CAAC;AAED,OAAO,MAAMG,mBAAmB,GAAID,QAAQ,IAAK,MAAMV,QAAQ,IAAI;EACjE,IAAI;IACF,MAAMC,GAAG,GAAG,MAAMd,KAAK,CAACe,IAAI,CAAC,GAAGT,OAAO,wBAAwB,EAAEiB,QAAQ,CAAC;IAC1EV,QAAQ,CAAC;MACPG,IAAI,EAAEZ,gBAAgB;MACtBa,OAAO,EAAEH,GAAG,CAACI;IACf,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZN,QAAQ,CAAC;MACPG,IAAI,EAAEX,aAAa;MACnBY,OAAO,EAAEE,GAAG,CAACC,QAAQ,GAAGD,GAAG,CAACC,QAAQ,CAACF,IAAI,CAACG,OAAO,GAAGF,GAAG,CAACE;IAC1D,CAAC,CAAC;EACJ;AACF,CAAC;AAED,OAAO,MAAMI,MAAM,GAAGA,CAAA,KAAMZ,QAAQ,IAAI;EACtCA,QAAQ,CAAC;IAAEG,IAAI,EAAEb;EAAO,CAAC,CAAC;EAC1BuB,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,GAAG;AAC5B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}